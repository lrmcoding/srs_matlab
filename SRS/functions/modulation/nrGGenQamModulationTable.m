function [modTab, bitPattern] = nrGGenQamModulationTable(modOrder)
% -------------------------------------------------------------------------
% Function: Domodulation table and demodulation matrix generation
%
% Input:    modOrder: Modulation order
%
% Output:   modTab: Modulation table generation
%           bitPattern: Bit sequence of each constellation point.
% -------------------------------------------------------------------------

    modTabQpsk = [1+1i*1, 1-1i*1, -1+1i*1, -1-1i*1] / sqrt(2);
    
    modTab16qam = [1+1i*1,1+1i*3,3+1i*1,3+1i*3,1-1i*1,1-1i*3,3-1i*1, ...
              3-1i*3,-1+1i*1,-1+1i*3,-3+1i*1,-3+1i*3,-1-1i*1, ...
              -1-1i*3,-3-1i*1,-3-1i*3] ./ sqrt(10);
    
    modTab64qam = [3+1i*3, 3+1i*1, 1+1i*3, 1+1i*1, 3+1i*5, 3+1i*7, 1+1i*5, ...
                 1+1i*7, 5+1i*3, 5+1i*1, 7+1i*3, 7+1i*1, 5+1i*5, 5+1i*7, 7+1i*5, ...
                 7+1i*7, 3-1i*3, 3-1i*1, 1-1i*3, 1-1i*1, 3-1i*5, 3-1i*7, 1-1i*5, ...
                 1-1i*7, 5-1i*3, 5-1i*1, 7-1i*3, 7-1i*1, 5-1i*5, 5-1i*7, 7-1i*5, ...
                 7-1i*7, -3+1i*3, -3+1i*1, -1+1i*3, -1+1i*1, -3+1i*5, -3+1i*7, ...
                -1+1i*5, -1+1i*7, -5+1i*3, -5+1i*1, -7+1i*3, -7+1i*1, -5+1i*5, ...
                -5+1i*7, -7+1i*5, -7+1i*7, -3-1i*3, -3-1i*1, -1-1i*3, -1-1i*1, ...
                -3-1i*5, -3-1i*7, -1-1i*5, -1-1i*7, -5-1i*3, -5-1i*1, -7-1i*3, ...
                -7-1i*1, -5-1i*5, -5-1i*7, -7-1i*5, -7-1i*7] / sqrt(42);
    %%
    modTab256qam = [5+5i, 5+7i, 7+5i, 7+7i, 5+3i, 5+1i, 7+3i, 7+1i, 3+5i, 3+7i, ...
                  1+5i, 1+7i, 3+3i, 3+1i, 1+3i, 1+1i, 5+11i, 5+9i, 7+11i, 7+9i, 5+13i, ...
                  5+15i, 7+13i, 7+15i, 3+11i, 3+9i, 1+11i, 1+9i, 3+13i, 3+15i, 1+13i, ...
                  1+15i, 11+5i, 11+7i, 9+5i, 9+7i, 11+3i, 11+1i, 9+3i, 9+1i, 13+5i, ...
                  13+7i, 15+5i, 15+7i, 13+3i, 13+1i, 15+3i, 15+1i, 11+11i, 11+9i, ...
                  9+11i, 9+9i, 11+13i, 11+15i, 9+13i, 9+15i, 13+11i, 13+9i, 15+11i, ...
                  15+9i, 13+13i, 13+15i, 15+13i, 15+15i, 5-5i, 5-7i, 7-5i, 7-7i, 5-3i, ...
                  5-1i, 7-3i, 7-1i, 3-5i, 3-7i, 1-5i, 1-7i, 3-3i, 3-1i, 1-3i, 1-1i, ...
                  5-11i, 5-9i, 7-11i, 7-9i, 5-13i, 5-15i, 7-13i, 7-15i, 3-11i, 3-9i, ...
                  1-11i, 1-9i, 3-13i, 3-15i, 1-13i, 1-15i, 11-5i, 11-7i, 9-5i, 9-7i, ...
                  11-3i, 11-1i, 9-3i, 9-1i, 13-5i, 13-7i, 15-5i, 15-7i, 13-3i, 13-1i, ...
                  15-3i, 15-1i, 11-11i, 11-9i, 9-11i, 9-9i, 11-13i, 11-15i, 9-13i, ...
                  9-15i, 13-11i, 13-9i, 15-11i, 15-9i, 13-13i, 13-15i, 15-13i, 15-15i, ...
                  -5+5i, -5+7i, -7+5i, -7+7i, -5+3i, -5+1i, -7+3i, -7+1i, -3+5i, ...
                  -3+7i, -1+5i, -1+7i, -3+3i, -3+1i, -1+3i, -1+1i, -5+11i, -5+9i, ...
                  -7+11i, -7+9i, -5+13i, -5+15i, -7+13i, -7+15i, -3+11i, -3+9i, -1+11i,...
                  -1+9i, -3+13i, -3+15i, -1+13i, -1+15i, -11+5i, -11+7i, -9+5i, -9+7i,...
                  -11+3i, -11+1i, -9+3i, -9+1i, -13+5i, -13+7i, -15+5i, -15+7i, -13+3i,...
                  -13+1i, -15+3i, -15+1i, -11+11i, -11+9i, -9+11i, -9+9i, -11+13i,...
                  -11+15i, -9+13i, -9+15i, -13+11i, -13+9i, -15+11i, -15+9i, -13+13i,...
                  -13+15i, -15+13i, -15+15i, -5-5i, -5-7i, -7-5i, -7-7i, -5-3i, -5-1i,...
                  -7-3i, -7-1i, -3-5i, -3-7i, -1-5i, -1-7i, -3-3i, -3-1i, -1-3i, ...
                  -1-1i, -5-11i, -5-9i, -7-11i, -7-9i, -5-13i, -5-15i, -7-13i, -7-15i,...
                  -3-11i, -3-9i, -1-11i, -1-9i, -3-13i, -3-15i, -1-13i, -1-15i, -11-5i,...
                  -11-7i, -9-5i, -9-7i, -11-3i, -11-1i, -9-3i, -9-1i, -13-5i, -13-7i,...
                  -15-5i, -15-7i, -13-3i, -13-1i, -15-3i, -15-1i, -11-11i, -11-9i,...
                  -9-11i, -9-9i, -11-13i, -11-15i, -9-13i, -9-15i, -13-11i, -13-9i,...
                  -15-11i, -15-9i, -13-13i, -13-15i, -15-13i, -15-15i] / sqrt(170);
           
    switch modOrder
        case 2
            modTab = modTabQpsk;
        case 4
            modTab = modTab16qam;
        case 6
            modTab = modTab64qam;
        case 8
            modTab = modTab256qam;
        otherwise
            disp('Invalid modulation order!');
    end
    
    bitPattern = zeros(modOrder, length(modTab));
    for idx = 1 : length(modTab)
        bitPattern(:, idx) = de2bi(idx - 1, modOrder, 'left-msb').';
    end

end